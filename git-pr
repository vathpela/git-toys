#!/bin/bash
set -e

SUBDIRECTORY_OK=Yes
OPTIONS_SPEC="\
git pr [options] <cmd> ...

manipulate pull requests
--
h,help show the help
usage* show the help
r,remote!=remote <pr> is relative to the specified remote
p,pr!=request specify the pull request number"
OPTIONS_KEEPDASHDASH=
OPTIONS_STUCKLONG=t

. /usr/libexec/git-core/git-sh-setup

remote=""
pr=""
declare -a list
while [ $# -ge 1 ]; do
	case $1 in
	--remote=*)
		remote=${1#--remote=} && shift
		continue
		;;
	--pr=*)
		pr=${1#--pr=} && shift
		continue
		;;
	--)
		shift
		cmd="$1"
		shift
		break
		;;
	*)
		list[${#list[*]}]=$1
		;;
	esac
	shift
done
while [ $# -ne 0 ]; do
	list[${#list[*]}]="$1" && shift
done
eval set -- "${list[$@]}"
[ -n "$cmd" ] || die "No command specified."

if [ -z "$pr" ]; then
	pr=$1
	[ -n "$pr" ] || die "No pull request specified."
	shift
fi
pr=${pr#pr/}
[ -n "$pr" ] || die "No pull request specified."
upstream_name=$(git config --get vathpela.toys.prremote) || upstream_name=$(git config --get vathpela.toys.upstream) || upstream_name=upstream
if [ -z "$remote" ]; then
	remote=${1:-${upstream_name}}
	shift >/dev/null 2>&1 || :
fi

case "$cmd" in
fetch)
	cmd=fetch-pr
	;;
merge|rebase|reset)
	exec git "$cmd" refs/remotes/${remote}/pr/${pr} "$@"
	;;
help)
	[ $# -lt 1 ] && echo zonk && usage 0 || :
	exec git-${1}-pr --help
	;;
*)
	merge=""
	if [ -f "${GIT_DIR}/refs/remotes/${remote}/pr-merge/${pr}" ]; then
		merge="refs/remotes/${remote}/pr-merge/${pr}^"
	fi
	revs=$(eval git rev-parse --sq --revs-only --no-flags "${merge}..refs/remotes/${remote}/pr/${pr}")
	[ -n "$revs" ] || exit 0
	case "$cmd" in
	show|lg|log)
		extra=--reverse
		;;
	esac
	eval exec git "$cmd" $extra $revs
	;;
esac

for x in "$@" ; do
	case "$x" in
	--help|-h|--usage|-\?)
		exec git-${cmd} --help
		;;
	esac
done

exec git ${cmd} --remote "$remote" --pr "$pr" "$@"
