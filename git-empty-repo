#!/bin/bash
#
# git-empty-repo
# Copyright 2017 Peter Jones <pjones@redhat.com>
#
# Distributed under terms of the GPLv3 license.
#

set -e

SUBDIRECTORY_OK=No
OPTIONS_SPEC="\
git empty-repo [options]

switch to using per-branch git work-trees in subdirs of an empty checkout
--
h,help show the help
usage* show the help

a,abyss-repo!=<repourl> for abyss repo
r,abyss-remote!=<name> for abyss repo remote
b,abyss-remote-branch!=<name> for remote abyss branch
l,abyss-local-branch!=<name> for local abyss branch"
OPTIONS_KEEPDASHDASH=
OPTIONS_STUCKLONG=t

. /usr/libexec/git-core/git-sh-setup

set -u

get_current_branch() {
	git branch | grep '^\* ' | cut -d\  -f2
}

declare -a list
ABYSS_BRANCH=""
while [[ $# -ge 1 ]] ; do
	case $1 in
	--abyss-local-branch)
		ABYSS_BRANCH="${2}"
		list+=(--local-branch "${2}")
		shift
		;;
	--abyss-local-branch=*)
		ABYSS_BRANCH="${1#--abyss-local-branch=}"
		list+=(--local-branch "${ABYSS_BRANCH}")
		;;
	*)
		list+=("${1}")
		;;
	esac
	shift
done

if [[ -z "${ABYSS_BRANCH}" ]] ; then
	ABYSS_BRANCH=empty
	list+=(empty)
fi

git add-empty-branch "${list[@]}"

CURRENT_BRANCH=$(get_current_branch)

git checkout ${ABYSS_BRANCH}
git worktree add ${CURRENT_BRANCH} ${CURRENT_BRANCH}

# vim:fenc=utf-8
